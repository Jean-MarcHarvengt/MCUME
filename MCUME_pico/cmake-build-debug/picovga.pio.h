// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --- //
// vga //
// --- //

#define vga_wrap_target 10
#define vga_wrap 14

#define vga_offset_sync 0u
#define vga_offset_entry 2u
#define vga_offset_dark 3u
#define vga_offset_irqset 7u
#define vga_offset_output 11u
#define vga_offset_extra1 12u
#define vga_offset_extra2 14u

static const uint16_t vga_program_instructions[] = {
    0x703b, //  0: out    x, 27           side 1     
    0x1041, //  1: jmp    x--, 1          side 1     
    0x70a5, //  2: out    pc, 5           side 1     
    0x6033, //  3: out    x, 19           side 0     
    0x6008, //  4: out    pins, 8         side 0     
    0x0045, //  5: jmp    x--, 5          side 0     
    0x60a5, //  6: out    pc, 5           side 0     
    0xc044, //  7: irq    clear 4         side 0     
    0x607b, //  8: out    null, 27        side 0     
    0xc504, //  9: irq    nowait 4        side 0 [5] 
            //     .wrap_target
    0x60a5, // 10: out    pc, 5           side 0     
    0x603b, // 11: out    x, 27           side 0     
    0x6008, // 12: out    pins, 8         side 0     
    0x004c, // 13: jmp    x--, 12         side 0     
    0x6008, // 14: out    pins, 8         side 0     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program vga_program = {
    .instructions = vga_program_instructions,
    .length = 15,
    .origin = 17,
};

static inline pio_sm_config vga_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + vga_wrap_target, offset + vga_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif

